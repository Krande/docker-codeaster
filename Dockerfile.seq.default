FROM aethereng/codeaster-common:latest as builder

# use code aster vversion
ENV ASTER_VERSION=15.5.1
# set environment variables
ENV TEMP_DIRECTORY=/tmp
ENV ASTER_DIRECTORY=/aster

# include libraries
ENV LD_LIBRARY_PATH=${ASTER_DIRECTORY}/hdf5/lib:${ASTER_DIRECTORY}/med/lib:${ASTER_DIRECTORY}/metis/lib:${ASTER_DIRECTORY}/mumps_seq/lib:${ASTER_DIRECTORY}/scotch_seq/lib:${ASTER_DIRECTORY}/tfel/lib:$LD_LIBRARY_PATH
ENV LIBPATH=${ASTER_DIRECTORY}/hdf5/lib:${ASTER_DIRECTORY}/med/lib:${ASTER_DIRECTORY}/metis/lib:${ASTER_DIRECTORY}/mumps_seq/lib:${ASTER_DIRECTORY}/scotch_seq/lib:$LIBPATH
ENV INCLUDES=${ASTER_DIRECTORY}/hdf5/include:${ASTER_DIRECTORY}/med/include:${ASTER_DIRECTORY}/metis/include:${ASTER_DIRECTORY}/mumps_seq/include:${ASTER_DIRECTORY}/mumps_seq/include_seq:${ASTER_DIRECTORY}/scotch_seq/include:$INCLUDES
ENV PYTHONPATH=$PYTHONPATH:${ASTER_DIRECTORY}/asrun/lib/python3.6/site-packages:${ASTER_DIRECTORY}/tfel/lib/python3.6/site-packages

# create symlink to lib64
RUN ln -s /usr/lib/x86_64-linux-gnu/ /usr/lib64

# update codeaster to $VERSION
WORKDIR ${TEMP_DIRECTORY}
RUN hg clone -r ${ASTER_VERSION} http://hg.code.sf.net/p/codeaster/src aster
WORKDIR ${TEMP_DIRECTORY}/aster
# add waf config files to src 
RUN mkdir -p ${TEMP_DIRECTORY}/aster/wafcfg 
ADD aster.wafcfg_scif_std.py ${TEMP_DIRECTORY}/aster/wafcfg/scif_std.py

# configure && build
RUN ./waf configure --use-config=scif_std --prefix=${ASTER_DIRECTORY}/aster --install-tests --with-data=${TEMP_DIRECTORY}/aster/data && \
    ./waf build

# install
RUN ./waf install

# move testcases to minimize binary image size
RUN mv ${ASTER_DIRECTORY}/aster/share/aster/tests ${TEMP_DIRECTORY}/tests && \
    mkdir ${ASTER_DIRECTORY}/aster/share/aster/tests && \
    for name in forma01a hsnv100a pynl01a sdll100a sslv155a ssnv128a zzzz100f; do \
        mv ${TEMP_DIRECTORY}/tests/${name}* ${ASTER_DIRECTORY}/aster/share/aster/tests/; \
    done

# binary installation
# # TODO: "-dev" could probably be removed
FROM ubuntu:18.04

ENV DEBIAN_FRONTEND noninteractive
ENV DEVTOOLS_COMPUTER_ID=aster

# Base system + prerequisites
# Show all the dependencies of each prerequisite even if some packages are
# repeated
RUN apt-get update -y && apt-get upgrade -y --no-install-recommends --with-new-pkgs -o Dpkg::Options::="--force-confold"
RUN apt-get install -y --no-install-recommends apt-utils
RUN apt-get install -y --no-install-recommends \
    # base system \
    cmake \
    g++ \
    gcc \
    gfortran \
    locales \
    make \
    mercurial \
    wget \
    # added for... \
    # hdf5 \
    zlib1g-dev \
    # med \
    python3-dev \
    # scotch \
    bison \
    flex \
    zlib1g-dev \
    # mumps \
    libopenblas-dev \
    python3-dev \
    python3-numpy \
    # tfel
    libboost-numpy-dev \
    libboost-python-dev \
    # parmetis
    libopenmpi-dev \
    libblacs-mpi-dev \
    libscalapack-openmpi-dev \
    # asrun
    gdb \
    tk \
    xterm \
    # external tools called by aster \
    gmsh \
    grace

ENV LANGUAGE=en_US.UTF-8
ENV LANG=en_US.UTF-8 
ENV LC_MESSAGES=POSIX
ENV LC_CTYPE=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

RUN locale-gen en_US.UTF-8 fr_FR.UTF-8
RUN update-locale

ENV ASTER_DIRECTORY=/aster

ENV LD_LIBRARY_PATH=${ASTER_DIRECTORY}/hdf5/lib:${ASTER_DIRECTORY}/med/lib:${ASTER_DIRECTORY}/metis/lib:${ASTER_DIRECTORY}/mumps_seq/lib:${ASTER_DIRECTORY}/scotch_seq/lib:${ASTER_DIRECTORY}/tfel/lib:$LD_LIBRARY_PATH
ENV LIBPATH=${ASTER_DIRECTORY}/hdf5/lib:${ASTER_DIRECTORY}/med/lib:${ASTER_DIRECTORY}/metis/lib:${ASTER_DIRECTORY}/mumps_seq/lib:${ASTER_DIRECTORY}/scotch_seq/lib:$LIBPATH
ENV INCLUDES=${ASTER_DIRECTORY}/hdf5/include:${ASTER_DIRECTORY}/med/include:${ASTER_DIRECTORY}/metis/include:${ASTER_DIRECTORY}/mumps_seq/include:${ASTER_DIRECTORY}/mumps_seq/include_seq:${ASTER_DIRECTORY}/scotch_seq/include:$INCLUDES
ENV PYTHONPATH=$PYTHONPATH:${ASTER_DIRECTORY}/asrun/lib/python3.6/site-packages:${ASTER_DIRECTORY}/tfel/lib/python3.6/site-packages

# clean source directory
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* /var/tmp/* /tmp/*

COPY --from=builder /aster /aster

# replay
RUN ln -s /usr/bin/python3 /usr/local/bin/python && \
    ln -s /aster/tfel/bin/mfront-3.2.1 /usr/local/bin/ && \
    ln -s /aster/asrun/bin/as_run /usr/local/bin/

ADD run_testcases /usr/local/bin/

WORKDIR /aster
